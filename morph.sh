#!/bin/bash

# –õ–æ–≥–æ—Ç–∏–ø
echo -e '\e[32m'
echo -e '‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ '
echo -e '‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ'
echo -e '‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ'
echo -e '‚ÄÅ‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ'
echo -e ' ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ'
echo -e '\e[0m'

echo -e " –ü—ñ–¥–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –∫–∞–Ω–∞–ª VDHUB, —â–æ–± –±—É—Ç–∏ –≤ –∫—É—Ä—Å—ñ –Ω–∞–π–∞–∫—Ç—É–∞–ª—å–Ω—ñ—à–∏—Ö –Ω–æ–≤–∏–Ω —Ç–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏ —É —Å–≤—ñ—Ç—ñ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç - https://t.me/vdhub_crypto"

sleep 2

while true; do
  # –ú–µ–Ω—é
  PS3='–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é: '
  options=("–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É Morph" "–í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É Morph" "–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω—ñ—Å—Ç—å –Ω–æ–¥–∏" "–î–æ–¥–∞—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞" "–í–∏–π—Ç–∏ –∑—ñ —Å–∫—Ä–∏–ø—Ç–∞")
  select opt in "${options[@]}"
  do
      case $opt in
          "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É Morph")
              echo "–ü–æ—á–∏–Ω–∞—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–¥–∏ Morph..."

              # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
              echo "–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
              sudo apt update && sudo apt upgrade -y
              sudo apt install curl git jq lz4 build-essential unzip make lz4 gcc jq ncdu tmux cmake clang pkg-config libssl-dev python3-pip protobuf-compiler bc -y

              # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Go
              echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Go..."
              sudo rm -rf /usr/local/go
              curl -Ls https://go.dev/dl/go1.22.2.linux-amd64.tar.gz | sudo tar -xzf - -C /usr/local
              eval $(echo 'export PATH=$PATH:/usr/local/go/bin' | sudo tee /etc/profile.d/golang.sh)
              eval $(echo 'export PATH=$PATH:$HOME/go/bin' | tee -a $HOME/.profile)
              go version

              # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker —Ç–∞ Docker Compose
              echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker —Ç–∞ Docker Compose..."
              sudo apt install -y ca-certificates curl gnupg lsb-release
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt update && sudo apt install -y docker-ce docker-ce-cli containerd.io
              sudo usermod -aG docker $USER
              newgrp docker
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose

              # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Geth
              echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Geth..."
              mkdir -p ~/.morph
              cd ~/.morph
              git clone https://github.com/morph-l2/morph.git
              cd morph
              git checkout v0.1.0-beta
              make nccc_geth
              cd ~/.morph/morph/node
              make build

              # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑–ø–∞–∫–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö
              echo "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑–ø–∞–∫–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö..."
              cd ~/.morph
              wget https://raw.githubusercontent.com/morph-l2/config-template/main/holesky/data.zip
              unzip data.zip

              # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Secret Key
              echo "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Secret Key..."
              cd ~/.morph
              openssl rand -hex 32 > jwt-secret.txt
              echo "–ü–∞—É–∑–∞ 30 —Å–µ–∫... –ó–±–µ—Ä–µ–∂—ñ—Ç—å Secret Key —É –Ω–∞–¥—ñ–π–Ω–æ–º—É –º—ñ—Å—Ü—ñ —Ç–∞ –Ω–µ –∑–∞–≥—É–±—ñ—Ç—å..."
              cat jwt-secret.txt
              sleep 30

              # –ó–∞–ø—É—Å–∫ –Ω–æ–¥–∏ Geth
              echo "–ó–∞–ø—É—Å–∫ –Ω–æ–¥–∏ Geth..."
              screen -S geth -d -m ~/.morph/morph/go-ethereum/build/bin/geth --morph-holesky \
                  --datadir "./geth-data" \
                  --http --http.api=web3,debug,eth,txpool,net,engine \
                  --http.port 8546 \
                  --authrpc.addr localhost \
                  --authrpc.vhosts="localhost" \
                  --authrpc.port 8551 \
                  --authrpc.jwtsecret=./jwt-secret.txt \
                  --miner.gasprice="100000000" \
                  --log.filename=./geth.log \
                  --port 30363

              # –ó–∞–ø—É—Å–∫ –Ω–æ–¥–∏ Morph
              echo "–ó–∞–ø—É—Å–∫ –Ω–æ–¥–∏ Morph..."
              screen -S morph -d -m ~/.morph/morph/node/build/bin/morphnode --home ./node-data \
                  --l2.jwt-secret ./jwt-secret.txt \
                  --l2.eth http://localhost:8546 \
                  --l2.engine http://localhost:8551 \
                  --log.filename ./node.log

              echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
              break
              ;;
              
          "–í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É Morph)
              echo "–í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–æ–¥–∏ Morph..."
              sudo rm -rf ~/.morph
              sudo docker system prune -a -f
              screen -S geth -X quit
              screen -S morph -X quit
              screen -S telegram_bot -X quit
              echo "–ù–æ–¥—É Morph —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ"
              break
              ;;
              
          "–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω—ñ—Å—Ç—å –Ω–æ–¥–∏")
              echo "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ –Ω–æ–¥–∏..."
              curl -X POST -H 'Content-Type: application/json' --data '{"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":74}' http://localhost:8546
              curl http://localhost:26657/status
              break
              ;;
              
          "–î–æ–¥–∞—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞")
              read -p "–í–≤–µ–¥—ñ—Ç—å API-–∫–ª—é—á –≤—ñ–¥ Telegram-–±–æ—Ç–∞: " API_KEY
              read -p "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à User ID —É Telegram: " USER_ID
              read -p "–í–≤–µ–¥—ñ—Ç—å —ñ–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 600): " CHECK_INTERVAL
              CHECK_INTERVAL=${CHECK_INTERVAL:-600}  # –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º ‚Äì 600 —Å–µ–∫—É–Ω–¥
              
              echo "–í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ Python..."
              sudo apt install python3 -y
              sudo apt install pip -y
              apt install python3-python-telegram-bot
              apt install python3-requests
              echo "–°—Ç–≤–æ—Ä—é—î–º–æ —ñ –∑–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫—Ä–∏–ø—Ç –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É..."
              cat <<EOF > ~/.morph/node_monitor.py
import requests
import time
import json
from telegram import Bot

api_key = $API_KEY
user_id = $USER_ID
check_interval = $CHECK_INTERVAL

bot = Bot(token=api_key)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É –Ω–æ–¥–∏
def check_node_status():
    try:
        response_geth = requests.post('http://localhost:8546', json={"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":74})
        response_morph = requests.get('http://localhost:26657/status')

        if response_geth.status_code == 200 and response_morph.status_code == 200:
            geth_data = response_geth.json()
            morph_data = response_morph.json()
            
            message = f"üü¢ –ù–æ–¥–∞ Morph –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ!\n\n" \
                      f"üîó Geth Peer Count: {geth_data['result']}\n" \
                      f"üìù Morph Node Status: {json.dumps(morph_data, indent=2)}"
            bot.send_message(chat_id=user_id, text=message)
        else:
            bot.send_message(chat_id=user_id, text="üî¥ –ü—Ä–æ–±–ª–µ–º–∏ –∑ –Ω–æ–¥–æ—é Morph!")
    except Exception as e:
        bot.send_message(chat_id=user_id, text=f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –Ω–æ–¥–∏: {e}")

# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
if __name__ == "__main__":
    notifications_enabled = True
    
    while True:
        if notifications_enabled:
            check_node_status()
        
        time.sleep(check_interval)
EOF
              chmod +x ~/.morph/node_monitor.py
              echo "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
              screen -S telegram_bot -d -m python3 ~/.morph/node_monitor.py
              echo "–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–¥–∏ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
              break
              ;;
              
          "–í–∏–π—Ç–∏ –∑—ñ —Å–∫—Ä–∏–ø—Ç–∞")
              echo "–í–∏—Ö—ñ–¥..."
              exit 0
              ;;
              
          *) echo "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.";;
      esac
  done
done
